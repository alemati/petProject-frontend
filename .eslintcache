[{"/Users/AM/pet_project/src/index.js":"1","/Users/AM/pet_project/src/App.js":"2","/Users/AM/pet_project/src/components/LoginView.js":"3","/Users/AM/pet_project/src/components/UserCreationView.js":"4","/Users/AM/pet_project/src/Store.js":"5","/Users/AM/pet_project/src/reducers/usersReducer.js":"6","/Users/AM/pet_project/src/services/userService.js":"7","/Users/AM/pet_project/src/reducers/loginReducer.js":"8","/Users/AM/pet_project/src/services/loginService.js":"9","/Users/AM/pet_project/src/components/HomeView.js":"10","/Users/AM/pet_project/src/components/Togglable.js":"11","/Users/AM/pet_project/src/components/UsersList.js":"12","/Users/AM/pet_project/src/components/PostPage.js":"13","/Users/AM/pet_project/src/components/PostForm.js":"14","/Users/AM/pet_project/src/reducers/postsReducer.js":"15","/Users/AM/pet_project/src/services/postService.js":"16","/Users/AM/pet_project/src/components/CommentForm.js":"17","/Users/AM/pet_project/src/reducers/commentsReducer.js":"18","/Users/AM/pet_project/src/services/commentService.js":"19","/Users/AM/pet_project/src/components/CommentsList.js":"20","/Users/AM/pet_project/src/components/SideBarNavigation.js":"21","/Users/AM/pet_project/src/components/TopBar.js":"22","/Users/AM/pet_project/src/components/PersonalPage.js":"23","/Users/AM/pet_project/src/components/UserPage.js":"24","/Users/AM/pet_project/src/components/SkillForm.js":"25","/Users/AM/pet_project/src/reducers/skillsReducer.js":"26","/Users/AM/pet_project/src/services/skillService.js":"27","/Users/AM/pet_project/src/reducers/notificationReducer.js":"28","/Users/AM/pet_project/src/components/Notification.js":"29"},{"size":387,"mtime":1611767695000,"results":"30","hashOfConfig":"31"},{"size":1832,"mtime":1612798320000,"results":"32","hashOfConfig":"31"},{"size":1701,"mtime":1612798377000,"results":"33","hashOfConfig":"31"},{"size":2691,"mtime":1612188711000,"results":"34","hashOfConfig":"31"},{"size":817,"mtime":1612189779000,"results":"35","hashOfConfig":"31"},{"size":1556,"mtime":1612188740000,"results":"36","hashOfConfig":"31"},{"size":778,"mtime":1612797334000,"results":"37","hashOfConfig":"31"},{"size":2381,"mtime":1612188541000,"results":"38","hashOfConfig":"31"},{"size":296,"mtime":1612797332000,"results":"39","hashOfConfig":"31"},{"size":931,"mtime":1612798345000,"results":"40","hashOfConfig":"31"},{"size":629,"mtime":1611952244000,"results":"41","hashOfConfig":"31"},{"size":9388,"mtime":1612802207000,"results":"42","hashOfConfig":"31"},{"size":4017,"mtime":1612798149000,"results":"43","hashOfConfig":"31"},{"size":1054,"mtime":1612798115000,"results":"44","hashOfConfig":"31"},{"size":1547,"mtime":1612798480000,"results":"45","hashOfConfig":"31"},{"size":1061,"mtime":1612797332000,"results":"46","hashOfConfig":"31"},{"size":921,"mtime":1612798244000,"results":"47","hashOfConfig":"31"},{"size":1617,"mtime":1612798550000,"results":"48","hashOfConfig":"31"},{"size":1094,"mtime":1612797331000,"results":"49","hashOfConfig":"31"},{"size":912,"mtime":1612798001000,"results":"50","hashOfConfig":"31"},{"size":353,"mtime":1612798158000,"results":"51","hashOfConfig":"31"},{"size":1107,"mtime":1612198916000,"results":"52","hashOfConfig":"31"},{"size":1255,"mtime":1612798132000,"results":"53","hashOfConfig":"31"},{"size":2548,"mtime":1612120324000,"results":"54","hashOfConfig":"31"},{"size":2078,"mtime":1612798196000,"results":"55","hashOfConfig":"31"},{"size":1962,"mtime":1612798525000,"results":"56","hashOfConfig":"31"},{"size":1002,"mtime":1612797333000,"results":"57","hashOfConfig":"31"},{"size":669,"mtime":1612198842000,"results":"58","hashOfConfig":"31"},{"size":422,"mtime":1612798089000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"113wyix",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/AM/pet_project/src/index.js",[],["124","125"],"/Users/AM/pet_project/src/App.js",[],"/Users/AM/pet_project/src/components/LoginView.js",["126"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../reducers/loginReducer'\nimport Notification from './Notification'\nimport { closeNotification } from '../reducers/notificationReducer'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nimport {\n    Link, useHistory\n} from \"react-router-dom\"\n\n\nconst LoginView = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setpassword] = useState(\"\")\n    const dispatch = useDispatch()\n    const history = useHistory()\n    dispatch(closeNotification())\n\n    const handleLogin = (event) => {\n        event.preventDefault()\n        console.log('logining is with:', username, password)\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Modal.Dialog>\n                <Modal.Header>\n                    <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n\n                <form onSubmit={handleLogin}>\n                    <Modal.Body>\n\n                        Username <input type='text' value={username} placeholder={'3-10 symbols'} onChange={event => setUsername(event.target.value)} />\n                        <br />\n                        Password <input type='password' value={password} placeholder={'3-10 symbols'} onChange={event => setpassword(event.target.value)} />\n\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Notification />\n                        <Button type='submit'>Login</Button>     <Link to=\"/createUser\">create new user</Link>\n                    </Modal.Footer>\n                </form>\n            </Modal.Dialog>\n        </div>\n    )\n}\n\nexport default LoginView;\n","/Users/AM/pet_project/src/components/UserCreationView.js",[],"/Users/AM/pet_project/src/Store.js",[],"/Users/AM/pet_project/src/reducers/usersReducer.js",[],"/Users/AM/pet_project/src/services/userService.js",["127","128"],"/Users/AM/pet_project/src/reducers/loginReducer.js",[],"/Users/AM/pet_project/src/services/loginService.js",["129"],"/Users/AM/pet_project/src/components/HomeView.js",["130","131"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport PostPage from './PostPage'\nimport PostForm from './PostForm'\nimport TopBar from './TopBar'\n\nimport SideBarNavigation from './SideBarNavigation'\n\nconst HomeView = () => {\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n\n    return (\n        <div >\n            <div className=\"container\">\n                <TopBar />\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <SideBarNavigation />\n                    </div>\n                    <div className=\"col-sm-7\">\n                        <PostPage />\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <PostForm />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default HomeView;","/Users/AM/pet_project/src/components/Togglable.js",[],["132","133"],"/Users/AM/pet_project/src/components/UsersList.js",["134","135","136","137"],"/Users/AM/pet_project/src/components/PostPage.js",["138","139"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { removePost } from '../reducers/postsReducer'\nimport { updateUser } from '../reducers/usersReducer'\n\nimport CommentForm from \"./CommentForm\"\nimport CommentsList from \"./CommentsList\"\n\nimport Button from 'react-bootstrap/Button'\n\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nimport {\n    Link,\n} from \"react-router-dom\"\n\n\nconst PostPage = () => {\n    const login = useSelector(state => state.login)\n    const allPosts = useSelector(state => state.posts)\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n    if (!currentUser) {\n        return null\n    }\n\n    const friends = users.filter(u => {\n        if (u.friends.includes(currentUser.id)) {\n            return u\n        }\n    })\n    const friendsId = friends.map(f => f.id)\n    const postIds = friendsId.concat(currentUser.id)\n    const postsByFriends = allPosts.filter(p => {\n        if (postIds.includes(p.user)) {\n            return p\n        }\n    })\n\n    return (\n        <div >\n            <h4>Posts</h4>\n            <Accordion defaultActiveKey=\"0\">\n                {postsByFriends.map(post => <PostLine key={post.id} post={post} currentUser={currentUser} />)}\n            </Accordion>\n        </div>\n    )\n}\n\nconst PostLine = ({ post, currentUser }) => {\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.users)\n    const handleDeletePost = () => {\n\n        const postsWithoutPostId = currentUser.posts.filter(idd => idd !== post.id)\n        const userUpdated = { ...currentUser, posts: postsWithoutPostId }\n\n\n        dispatch(removePost(post.id))\n        dispatch(updateUser(userUpdated))\n    }\n    if (post.user === currentUser.id) {\n        return (\n            <div>\n                <Card >\n                    <Card.Header>\n                        <Accordion.Toggle as={Card.Body} variant=\"link\" eventKey={post.id} >\n                            {post.content} <Button className=\"deleteButton\" onClick={() => handleDeletePost()}>delete</Button>\n                            \n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={post.id}>\n                        <Card.Body>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <CommentForm postId={post.id} user={currentUser} />\n                                </div>\n                                <div className=\"col\">\n                                    <CommentsList postId={post.id} />\n                                </div>\n\n                            </div>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </div>\n        )\n    }\n    const postCreator = users.find(u => u.id === post.user)\n    return (\n        <div>\n            <Card>\n\n                <Card.Header>\n\n                    <Accordion.Toggle as={Card.Body} variant=\"link\" eventKey={post.id}>\n                        {post.content} <p className=\"by\">by<Link className=\"by\" to={`/user/${postCreator.url}`}>&nbsp;{ postCreator.name}</Link></p> \n                        \n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={post.id}>\n                    <Card.Body>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <CommentForm postId={post.id} user={currentUser} />\n                            </div>\n                            <div className=\"col\">\n                                <CommentsList postId={post.id} />\n                            </div>\n\n                        </div>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </div>\n    )\n}\n\nexport default PostPage;","/Users/AM/pet_project/src/components/PostForm.js",[],"/Users/AM/pet_project/src/reducers/postsReducer.js",[],"/Users/AM/pet_project/src/services/postService.js",["140"],"/Users/AM/pet_project/src/components/CommentForm.js",[],"/Users/AM/pet_project/src/reducers/commentsReducer.js",[],"/Users/AM/pet_project/src/services/commentService.js",["141"],"/Users/AM/pet_project/src/components/CommentsList.js",[],"/Users/AM/pet_project/src/components/SideBarNavigation.js",[],"/Users/AM/pet_project/src/components/TopBar.js",[],"/Users/AM/pet_project/src/components/PersonalPage.js",[],"/Users/AM/pet_project/src/components/UserPage.js",["142"],"import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TopBar from './TopBar'\nimport SideBarNavigation from './SideBarNavigation'\nimport { updateSkill } from '../reducers/skillsReducer'\n\nimport {\n    useParams\n} from \"react-router-dom\"\n\nconst UserPage = () => {\n    const url = useParams().url\n    const allPosts = useSelector(state => state.posts)\n    const allSkills = useSelector(state => state.skills)\n    const users = useSelector(state => state.users)\n    const user = users.find(u => u.url === url)\n    const userSkills = allSkills.filter(s => s.user === user.id)\n    if (!user) {\n        return null\n    }\n    const userPosts = allPosts.filter(u => u.user === user.id)\n    const skillsToShow = userSkills.sort((e1, e2) => e2.likes.length - e1.likes.length)\n                        \n    return (\n        <div className=\"container\">\n            <TopBar />\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-sm-2\">\n                    <SideBarNavigation />\n                </div>\n                <div className=\"col-sm-7\">\n                    <h4>{user.name}</h4>\n                    <h5>{user.name}'s posts:</h5>\n                    {userPosts.map(p => <p key={p.id}>{p.content}</p>)}\n                </div>\n                <div className=\"col-sm-3\">\n                    <h4>{user.name}'s skills</h4>\n                    <hr />\n                    {skillsToShow.map(skill => <SkillLine key={skill.id} skill={skill} />)}\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nconst SkillLine = ({ skill }) => {\n    const dispatch = useDispatch()\n    const login = useSelector(state => state.login)\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n\n    const handleLike = () => {\n        // console.log('I want to like this skill', id)\n        const updatedLikeList = skill.likes.concat(currentUser.id)\n        const updatedSkill = { ...skill, likes: updatedLikeList }\n        dispatch(updateSkill(updatedSkill))\n    }\n\n    if (skill.likes.includes(currentUser.id)) {\n        return (\n            <div >\n                <p key={skill.id}>{skill.content}: {skill.likes.length} likes. You liked it!</p>\n                <hr />\n            </div>\n        )\n    }\n\n    return (\n        <div >\n            <p key={skill.id}>{skill.content}: {skill.likes.length} likes. <button onClick={() => handleLike()}>like!</button></p>\n            <hr />\n        </div>\n    )\n}\n\nexport default UserPage;","/Users/AM/pet_project/src/components/SkillForm.js",[],"/Users/AM/pet_project/src/reducers/skillsReducer.js",[],"/Users/AM/pet_project/src/services/skillService.js",["143"],"/Users/AM/pet_project/src/reducers/notificationReducer.js",[],"/Users/AM/pet_project/src/components/Notification.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":18,"column":11,"nodeType":"150","messageId":"151","endLine":18,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":12,"column":3,"nodeType":"150","messageId":"151","endLine":12,"endColumn":8},{"ruleId":"153","severity":1,"message":"154","line":35,"column":1,"nodeType":"155","endLine":35,"endColumn":77},{"ruleId":"153","severity":1,"message":"154","line":12,"column":1,"nodeType":"155","endLine":12,"endColumn":25},{"ruleId":"148","severity":1,"message":"156","line":2,"column":23,"nodeType":"150","messageId":"151","endLine":2,"endColumn":34},{"ruleId":"148","severity":1,"message":"157","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"144","replacedBy":"158"},{"ruleId":"146","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":24,"column":47,"nodeType":"162","messageId":"163","endLine":24,"endColumn":49},{"ruleId":"160","severity":1,"message":"161","line":29,"column":47,"nodeType":"162","messageId":"163","endLine":29,"endColumn":49},{"ruleId":"160","severity":1,"message":"161","line":34,"column":46,"nodeType":"162","messageId":"163","endLine":34,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":98,"column":44,"nodeType":"162","messageId":"163","endLine":98,"endColumn":46},{"ruleId":"160","severity":1,"message":"161","line":28,"column":36,"nodeType":"162","messageId":"163","endLine":28,"endColumn":38},{"ruleId":"160","severity":1,"message":"161","line":35,"column":46,"nodeType":"162","messageId":"163","endLine":35,"endColumn":48},{"ruleId":"153","severity":1,"message":"154","line":45,"column":1,"nodeType":"155","endLine":45,"endColumn":85},{"ruleId":"153","severity":1,"message":"154","line":45,"column":1,"nodeType":"155","endLine":45,"endColumn":85},{"ruleId":"148","severity":1,"message":"164","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":43,"column":1,"nodeType":"155","endLine":43,"endColumn":85},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useDispatch' is defined but never used.","'logout' is defined but never used.",["165"],["166"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]