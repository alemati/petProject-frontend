[{"/Users/AM/pet_project/src/index.js":"1","/Users/AM/pet_project/src/App.js":"2","/Users/AM/pet_project/src/components/LoginView.js":"3","/Users/AM/pet_project/src/components/UserCreationView.js":"4","/Users/AM/pet_project/src/Store.js":"5","/Users/AM/pet_project/src/reducers/usersReducer.js":"6","/Users/AM/pet_project/src/services/userService.js":"7","/Users/AM/pet_project/src/reducers/loginReducer.js":"8","/Users/AM/pet_project/src/services/loginService.js":"9","/Users/AM/pet_project/src/components/HomeView.js":"10","/Users/AM/pet_project/src/components/Togglable.js":"11","/Users/AM/pet_project/src/components/UsersList.js":"12","/Users/AM/pet_project/src/components/PostPage.js":"13","/Users/AM/pet_project/src/components/PostForm.js":"14","/Users/AM/pet_project/src/reducers/postsReducer.js":"15","/Users/AM/pet_project/src/services/postService.js":"16","/Users/AM/pet_project/src/components/CommentForm.js":"17","/Users/AM/pet_project/src/reducers/commentsReducer.js":"18","/Users/AM/pet_project/src/services/commentService.js":"19","/Users/AM/pet_project/src/components/CommentsList.js":"20","/Users/AM/pet_project/src/components/SideBarNavigation.js":"21","/Users/AM/pet_project/src/components/TopBar.js":"22"},{"size":387,"mtime":1611767695000,"results":"23","hashOfConfig":"24"},{"size":1647,"mtime":1611947486000,"results":"25","hashOfConfig":"24"},{"size":1560,"mtime":1611943228000,"results":"26","hashOfConfig":"24"},{"size":1846,"mtime":1611943553000,"results":"27","hashOfConfig":"24"},{"size":633,"mtime":1611911622000,"results":"28","hashOfConfig":"24"},{"size":1187,"mtime":1611852348000,"results":"29","hashOfConfig":"24"},{"size":774,"mtime":1611842353000,"results":"30","hashOfConfig":"24"},{"size":2073,"mtime":1611928144000,"results":"31","hashOfConfig":"24"},{"size":263,"mtime":1611677421000,"results":"32","hashOfConfig":"24"},{"size":1444,"mtime":1611947054000,"results":"33","hashOfConfig":"24"},{"size":1001,"mtime":1611859647000,"results":"34","hashOfConfig":"24"},{"size":10243,"mtime":1611949534000,"results":"35","hashOfConfig":"24"},{"size":4310,"mtime":1611937503000,"results":"36","hashOfConfig":"24"},{"size":1114,"mtime":1611867030000,"results":"37","hashOfConfig":"24"},{"size":1243,"mtime":1611858201000,"results":"38","hashOfConfig":"24"},{"size":1056,"mtime":1611933896000,"results":"39","hashOfConfig":"24"},{"size":1111,"mtime":1611929316000,"results":"40","hashOfConfig":"24"},{"size":1356,"mtime":1611934080000,"results":"41","hashOfConfig":"24"},{"size":1059,"mtime":1611933832000,"results":"42","hashOfConfig":"24"},{"size":1113,"mtime":1611938721000,"results":"43","hashOfConfig":"24"},{"size":733,"mtime":1611947216000,"results":"44","hashOfConfig":"24"},{"size":931,"mtime":1611947403000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"113wyix",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"/Users/AM/pet_project/src/index.js",[],["104","105"],"/Users/AM/pet_project/src/App.js",["106","107","108"],"import React, { useEffect } from 'react'\nimport LoginView from './components/LoginView'\nimport UserCreationView from './components/UserCreationView'\nimport HomeView from './components/HomeView'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { initLogin } from './reducers/loginReducer'\nimport { initializePosts } from './reducers/postsReducer'\nimport { initializeComments } from './reducers/commentsReducer'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport UsersList from './components/UsersList'\n\n\nimport {\n  Switch, Route, Link,\n} from \"react-router-dom\"\n\nconst App = () => {\n  console.log('app is running')\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeComments())\n    dispatch(initializeUsers())\n    dispatch(initLogin())\n    dispatch(initializePosts())\n  }, [dispatch])\n  const login = useSelector(state => state.login)\n\n  const users = useSelector(state => state.users)\n\n  return (\n    <div>\n      {/* {login === null &&\n        // <div>\n        //   <Link to=\"/createUser\">create new user</Link>\n        //   <br />\n        //   <Link to=\"/\">home</Link>\n        // </div>\n        <Route path=\"/\">\n          <LoginView />\n        </Route>\n      } */}\n      \n\n      <Switch>\n\n        <Route path=\"/connections\">\n          <UsersList />\n        </Route>\n\n        <Route path=\"/home\">\n          <HomeView />\n        </Route>\n\n        <Route path=\"/createUser\">\n          <UserCreationView />\n        </Route>\n\n        <Route path=\"/\">\n          <LoginView />\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n}\n\nexport default App;\n","/Users/AM/pet_project/src/components/LoginView.js",["109","110","111"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n// import { initializeUsers } from '../reducers/usersReducer'\n// import loginService from '../services/loginService' \nimport { login } from '../reducers/loginReducer'\nimport Card from 'react-bootstrap/Card'\n\n\nimport {\n    Switch, Route, Link, useHistory\n  } from \"react-router-dom\"\n\n\nconst LoginView = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setpassword] = useState(\"\")\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleLogin = () => {\n        console.log('logining is with:', username, password)\n        dispatch(login(username, password))\n        history.push('/home')\n    }\n\n    return (\n        <div className=\"login-form\">\n            {/* <div > */}\n\n            {/* <div>\n          <Link to=\"/createUser\">create new user</Link>\n          <br />\n          <Link to=\"/\">home</Link>\n        </div> */}\n\n            <form onSubmit={handleLogin}>\n                username <input type='text' value={username} placeholder={'username'} onChange={event => setUsername(event.target.value)} />\n                <br />\n                    password <input type='password' value={password} placeholder={'password'} onChange={event => setpassword(event.target.value)} />\n                <br />\n                <button type='submit'>Login</button>     <Link to=\"/createUser\">create new user</Link> \n                \n\n            </form>\n\n            {/* </div> */}\n\n        </div>\n    )\n}\n\nexport default LoginView;\n","/Users/AM/pet_project/src/components/UserCreationView.js",["112","113","114"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createNewUser } from '../reducers/usersReducer'\n\nimport {\n    Switch, Route, Link, useHistory\n  } from \"react-router-dom\"\n\n\nconst UserCreationPage = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setpassword] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n    const [name, setName] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    const handleCreateNew = () => {\n        console.log('creating new user with:', username, password, url, name)\n        if (username === \"\" || password === \"\" || url === \"\" || name === \"\") {\n            console.log('fill all fields')\n        } else {\n            const newUser = {\n                username: username,\n                url: url,\n                password: password,\n                name: name\n            }\n            dispatch(createNewUser(newUser))\n        }\n        \n    }\n\n    return (\n        <div className=\"login-form\">\n\n            <form onSubmit={handleCreateNew}>\n                username <input type='text' value={username} placeholder={'username'} onChange={event => setUsername(event.target.value)} />\n                <br />\n                password <input type='password' value={password} placeholder={'password'} onChange={event => setpassword(event.target.value)} />\n                <br />\n                url <input type='text' value={url} placeholder={'URL'} onChange={event => setUrl(event.target.value)} />\n                <br />\n                name <input type='text' value={name} placeholder={'name'} onChange={event => setName(event.target.value)} />\n                <br />\n                <button type='submit'>Create new user</button>   <Link to=\"/\">login</Link>\n            </form>\n\n\n        </div>\n    )\n}\n\nexport default UserCreationPage;","/Users/AM/pet_project/src/Store.js",[],"/Users/AM/pet_project/src/reducers/usersReducer.js",[],"/Users/AM/pet_project/src/services/userService.js",["115","116"],"import axios from 'axios'\n// const baseUrl = '/users'\nconst baseUrl = 'http://localhost:3005/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n  \n}\nconst removeToken = () => {\n  token = null\n  \n}\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst getAll = async () => {\n  const response = await axios.get(`${baseUrl}`)\n  return response.data\n}\n\nconst createNew = async (newObject) => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const res = await axios.put(`${baseUrl}/${id}`, newObject)\n  return res.data\n}\n\nexport default { getAll, getById, createNew, setToken, removeToken, update }","/Users/AM/pet_project/src/reducers/loginReducer.js",[],"/Users/AM/pet_project/src/services/loginService.js",["117"],"import axios from 'axios'\nconst baseUrl = 'http://localhost:3005/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  console.log('response was:', response)\n  return response.data\n}\n\nexport default { login }","/Users/AM/pet_project/src/components/HomeView.js",["118","119","120","121","122","123","124"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport Togglable from './Togglable'\nimport UsersList from './UsersList'\nimport PostPage from './PostPage'\nimport PostForm from './PostForm'\nimport styles from '../styles.css'\nimport TopBar from './TopBar'\n\nimport SideBarNavigation from './SideBarNavigation'\n\n// import {\n//     useHistory\n// } from 'react-router-dom'\n\nimport {\n    Switch, Route, Link, useHistory,\n} from \"react-router-dom\"\n\nconst HomeView = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n\n    const handleLogout = () => {\n        dispatch(logout())\n        history.push('/')\n    }\n\n    return (\n\n\n        <div >\n            <div className=\"container\">\n                <TopBar />\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <SideBarNavigation />\n                        {/* <UsersList /> */}\n                    </div>\n                    <div className=\"col-sm-7\">\n                        <PostPage />\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <PostForm />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default HomeView;","/Users/AM/pet_project/src/components/Togglable.js",[],"/Users/AM/pet_project/src/components/UsersList.js",["125","126","127","128","129","130","131","132","133","134"],"/Users/AM/pet_project/src/components/PostPage.js",["135","136","137","138","139","140","141"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport { removePost } from '../reducers/postsReducer'\nimport { updateUser } from '../reducers/usersReducer'\nimport UsersList from './UsersList'\nimport Togglable from './Togglable'\n\nimport CommentForm from \"./CommentForm\"\nimport CommentsList from \"./CommentsList\"\n\n\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport {\n    useHistory\n} from 'react-router-dom'\n\nconst PostPage = () => {\n    const login = useSelector(state => state.login)\n    const allPosts = useSelector(state => state.posts)\n    const users = useSelector(state => state.users)\n    const currentUser = users.find(u => u.username === login.username)\n    if (!currentUser) {\n        return null\n    }\n\n    const friends = users.filter(u => {\n        if (u.friends.includes(currentUser.id)) {\n            return u\n        }\n    })\n    const friendsId = friends.map(f => f.id)\n    const postIds = friendsId.concat(currentUser.id)\n    const postsByFriends = allPosts.filter(p => {\n        if (postIds.includes(p.user)) {\n            return p\n        }\n    })\n\n    return (\n        <div >\n            <h4>Posts</h4>\n            <Accordion defaultActiveKey=\"0\">\n                {postsByFriends.map(post => <PostLine key={post.id} post={post} currentUser={currentUser} />)}\n            </Accordion>\n        </div>\n    )\n}\n\nconst PostLine = ({ post, currentUser }) => {\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.users)\n    const handleDeletePost = () => {\n\n        const postsWithoutPostId = currentUser.posts.filter(idd => idd !== post.id)\n        const userUpdated = { ...currentUser, posts: postsWithoutPostId }\n\n\n        dispatch(removePost(post.id))\n        dispatch(updateUser(userUpdated))\n    }\n    if (post.user === currentUser.id) {\n        return (\n            <div>\n                <Card >\n                    <Card.Header>\n                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={post.id} >\n                            {post.content} <button className=\"right\" onClick={() => handleDeletePost()}>delete</button>\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={post.id}>\n                        <Card.Body>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <CommentForm postId={post.id} user={currentUser} />\n                                </div>\n                                <div className=\"col\">\n                                    <CommentsList postId={post.id} />\n                                </div>\n\n                            </div>\n                            {/* <CommentForm postId={post.id} user={currentUser} />\n                            <CommentsList postId={post.id} /> */}\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </div>\n        )\n    }\n    const postCreator = users.find(u => u.id === post.user)\n    return (\n        <div>\n            <Card>\n\n                <Card.Header>\n\n                    <Accordion.Toggle as={Card.Body} variant=\"link\" eventKey={post.id}>\n                        {post.content} <p className=\"by\">by {postCreator.name}</p>\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={post.id}>\n                    <Card.Body>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <CommentForm postId={post.id} user={currentUser} />\n                            </div>\n                            <div className=\"col\">\n                                <CommentsList postId={post.id} />\n                            </div>\n\n                        </div>\n\n                        {/* <CommentForm postId={post.id} user={currentUser} />\n                        <CommentsList postId={post.id} /> */}\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </div>\n    )\n}\n\nexport default PostPage;","/Users/AM/pet_project/src/components/PostForm.js",["142","143","144"],"import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport { createNewPost } from '../reducers/postsReducer'\nimport UsersList from './UsersList'\nimport PostPage from './PostPage'\n\n\nconst PostForm = () => {\n    const [contentt, setContentt] = useState(\"\")\n    const dispatch = useDispatch()\n\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n    const handleAddPost = () => {\n        const newPost = {\n            content: contentt,\n            likes: 0\n        }\n        setContentt('')\n        dispatch(createNewPost(newPost))\n    }\n\n\n    return (\n        <div >\n            <h4>Create new post</h4>\n            <form onSubmit={handleAddPost}>\n                <textarea className=\"post\" value={contentt} placeholder={'Write a new post'} onChange={event => setContentt(event.target.value)}></textarea>\n                \n                <br />\n                <button type='submit'>Create new post</button>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default PostForm;","/Users/AM/pet_project/src/reducers/postsReducer.js",["145","146","147"],"\nimport postService from '../services/postService'\nimport { useDispatch } from 'react-redux'\nimport { updateUser } from '../reducers/usersReducer'\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ('CREATE_NEW_POST'):\n            return state.concat(action.data)\n        case ('INIT_POSTS'):\n            return action.data\n        case ('REMOVE_POST'):\n            const newState = state.filter(p => p.id !== action.data)\n            return newState\n        default:\n    }\n    return state\n}\n\nexport const initializePosts = () => {\n    return async dispatch => {\n        const postsFromServer = await postService.getAll()\n        dispatch({\n            type: 'INIT_POSTS',\n            data: postsFromServer,\n        })\n    }\n}\n\nexport const createNewPost = obj => {\n    return async dispatch => {\n        const createdPOST = await postService.createNew(obj)\n        dispatch({\n            type: 'CREATE_NEW_POST',\n            data: createdPOST,\n        })\n    }\n}\n\nexport const removePost = ( postId ) => {\n    return async dispatch => {\n        const res = await postService.remove(postId)\n        dispatch({\n            type: 'REMOVE_POST',\n            data: postId\n        })\n    }\n}\n\nexport default reducer","/Users/AM/pet_project/src/services/postService.js",["148"],"/Users/AM/pet_project/src/components/CommentForm.js",["149","150","151"],"/Users/AM/pet_project/src/reducers/commentsReducer.js",["152","153","154","155"],"\nimport postService from '../services/postService'\nimport commentService from '../services/commentService'\nimport { useDispatch } from 'react-redux'\nimport { updateUser } from '../reducers/usersReducer'\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ('CREATE_NEW_COMMENT'):\n            return state.concat(action.data)\n        case ('INIT_COMMENTS'):\n            return action.data\n        case ('REMOVE_COMMENT'):\n            const newState = state.filter(p => p.id !== action.data)\n            return newState\n        default:\n    }\n    return state\n}\n\nexport const initializeComments = () => {\n    return async dispatch => {\n        const commentsFromServer = await commentService.getAll()\n        dispatch({\n            type: 'INIT_COMMENTS',\n            data: commentsFromServer,\n        })\n    }\n}\n\nexport const createNewComment = obj => {\n    return async dispatch => {\n        const createdComment = await commentService.createNew(obj)\n        dispatch({\n            type: 'CREATE_NEW_COMMENT',\n            data: createdComment,\n        })\n    }\n}\n\nexport const removeComment = ( commentId ) => {\n    return async dispatch => {\n        const res = await commentService.remove(commentId)\n        dispatch({\n            type: 'REMOVE_COMMENT',\n            data: commentId\n        })\n    }\n}\n\nexport default reducer","/Users/AM/pet_project/src/services/commentService.js",["156"],"/Users/AM/pet_project/src/components/CommentsList.js",["157","158","159","160","161"],"import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport UsersList from './UsersList'\nimport { createNewComment } from '../reducers/commentsReducer'\n\n\nconst CommentList = ({ postId }) => {\n    const allComments = useSelector(state => state.comments)\n    const commentsToPost = allComments.filter(c => c.post === postId)\n    return (\n        <div>\n            <h5>Recent comments</h5>\n            <div className=\"comments-list\">\n                {/* {commentsToPost.map(c => <p key={c.id}> {c.content} <p className=\"by\">by name</p>  <hr /> </p>)} */}\n                {commentsToPost.map(c => <CommentLine key={c.id} comment={c}/>)}\n            </div>\n        </div>\n    )\n}\n\nconst CommentLine = ({ comment }) => {\n    const users = useSelector(state => state.users)\n    const creator = users.find(u => u.id === comment.user)\n    return (\n        <div>\n            <span> {comment.content} <p className=\"by\">by {creator.name}</p></span> \n           \n            <hr />\n        </div>\n    )\n\n}\n\nexport default CommentList;","/Users/AM/pet_project/src/components/SideBarNavigation.js",["162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport Togglable from './Togglable'\nimport UsersList from './UsersList'\nimport PostPage from './PostPage'\nimport PostForm from './PostForm'\nimport styles from '../styles.css'\n\nimport {\n    Switch, Route, Link, useHistory,\n} from \"react-router-dom\"\n\nconst SideBarNavigation = () => {\n\n    return (\n        <div >\n            <div class=\"sidenav\">\n                <a href=\"/home\">Posts</a> <br /> \n                <a href=\"/connections\">Connections</a>  <br /> \n                <a className=\"isDisabled\" href=\"#\">Settings</a>  \n            </div>\n        </div>\n    )\n}\n\nexport default SideBarNavigation;","/Users/AM/pet_project/src/components/TopBar.js",["175","176","177"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\n// import TopBar from './HomeView'\n\nimport {\n    Switch, Route, Link, useHistory,\n} from \"react-router-dom\"\n\nconst TopBar = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const login = useSelector(state => state.login)\n    if (!login) {\n        return null\n    }\n\n    const handleLogout = () => {\n        dispatch(logout())\n        history.push('/')\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-2\">\n                <h2>Welcome</h2>\n            </div>\n            <div className=\"col-sm-8\">\n                <p>Logged in as {login.name}</p>\n            </div>\n            <div className=\"col-sm-2\">\n                <button onClick={handleLogout}>logout</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default TopBar;",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":18,"column":18,"nodeType":"184","messageId":"185","endLine":18,"endColumn":22},{"ruleId":"182","severity":1,"message":"186","line":31,"column":9,"nodeType":"184","messageId":"185","endLine":31,"endColumn":14},{"ruleId":"182","severity":1,"message":"187","line":33,"column":9,"nodeType":"184","messageId":"185","endLine":33,"endColumn":14},{"ruleId":"182","severity":1,"message":"188","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":12},{"ruleId":"182","severity":1,"message":"189","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":11},{"ruleId":"182","severity":1,"message":"190","line":10,"column":13,"nodeType":"184","messageId":"185","endLine":10,"endColumn":18},{"ruleId":"182","severity":1,"message":"189","line":6,"column":5,"nodeType":"184","messageId":"185","endLine":6,"endColumn":11},{"ruleId":"182","severity":1,"message":"190","line":6,"column":13,"nodeType":"184","messageId":"185","endLine":6,"endColumn":18},{"ruleId":"182","severity":1,"message":"191","line":6,"column":26,"nodeType":"184","messageId":"185","endLine":6,"endColumn":36},{"ruleId":"182","severity":1,"message":"192","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":8},{"ruleId":"193","severity":1,"message":"194","line":35,"column":1,"nodeType":"195","endLine":35,"endColumn":77},{"ruleId":"193","severity":1,"message":"194","line":10,"column":1,"nodeType":"195","endLine":10,"endColumn":25},{"ruleId":"182","severity":1,"message":"196","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"198","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":18,"column":5,"nodeType":"184","messageId":"185","endLine":18,"endColumn":11},{"ruleId":"182","severity":1,"message":"190","line":18,"column":13,"nodeType":"184","messageId":"185","endLine":18,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":18,"column":20,"nodeType":"184","messageId":"185","endLine":18,"endColumn":24},{"ruleId":"182","severity":1,"message":"199","line":30,"column":11,"nodeType":"184","messageId":"185","endLine":30,"endColumn":23},{"ruleId":"182","severity":1,"message":"200","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"201","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":19},{"ruleId":"182","severity":1,"message":"196","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"202","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":14},{"ruleId":"182","severity":1,"message":"203","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":23,"column":47,"nodeType":"206","messageId":"207","endLine":23,"endColumn":49},{"ruleId":"204","severity":1,"message":"205","line":28,"column":47,"nodeType":"206","messageId":"207","endLine":28,"endColumn":49},{"ruleId":"204","severity":1,"message":"205","line":34,"column":46,"nodeType":"206","messageId":"207","endLine":34,"endColumn":48},{"ruleId":"182","severity":1,"message":"208","line":41,"column":11,"nodeType":"184","messageId":"185","endLine":41,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":131,"column":44,"nodeType":"206","messageId":"207","endLine":131,"endColumn":46},{"ruleId":"182","severity":1,"message":"209","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"197","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":17},{"ruleId":"182","severity":1,"message":"196","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":17},{"ruleId":"182","severity":1,"message":"202","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":14},{"ruleId":"182","severity":1,"message":"191","line":18,"column":5,"nodeType":"184","messageId":"185","endLine":18,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":30,"column":36,"nodeType":"206","messageId":"207","endLine":30,"endColumn":38},{"ruleId":"204","severity":1,"message":"205","line":37,"column":46,"nodeType":"206","messageId":"207","endLine":37,"endColumn":48},{"ruleId":"182","severity":1,"message":"209","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"197","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"210","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"211","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":21},{"ruleId":"182","severity":1,"message":"212","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":20},{"ruleId":"182","severity":1,"message":"213","line":42,"column":15,"nodeType":"184","messageId":"185","endLine":42,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":44,"column":1,"nodeType":"195","endLine":44,"endColumn":85},{"ruleId":"182","severity":1,"message":"209","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"197","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"214","line":11,"column":11,"nodeType":"184","messageId":"185","endLine":11,"endColumn":22},{"ruleId":"182","severity":1,"message":"215","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":19},{"ruleId":"182","severity":1,"message":"211","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":21},{"ruleId":"182","severity":1,"message":"212","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":20},{"ruleId":"182","severity":1,"message":"213","line":43,"column":15,"nodeType":"184","messageId":"185","endLine":43,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":44,"column":1,"nodeType":"195","endLine":44,"endColumn":85},{"ruleId":"182","severity":1,"message":"200","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"211","line":2,"column":23,"nodeType":"184","messageId":"185","endLine":2,"endColumn":34},{"ruleId":"182","severity":1,"message":"209","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"197","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"216","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":26},{"ruleId":"182","severity":1,"message":"217","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":21},{"ruleId":"182","severity":1,"message":"211","line":2,"column":23,"nodeType":"184","messageId":"185","endLine":2,"endColumn":34},{"ruleId":"182","severity":1,"message":"209","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"196","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"210","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"203","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":16},{"ruleId":"182","severity":1,"message":"198","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":11,"column":5,"nodeType":"184","messageId":"185","endLine":11,"endColumn":11},{"ruleId":"182","severity":1,"message":"190","line":11,"column":13,"nodeType":"184","messageId":"185","endLine":11,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":11,"column":20,"nodeType":"184","messageId":"185","endLine":11,"endColumn":24},{"ruleId":"182","severity":1,"message":"191","line":11,"column":26,"nodeType":"184","messageId":"185","endLine":11,"endColumn":36},{"ruleId":"218","severity":1,"message":"219","line":21,"column":17,"nodeType":"220","endLine":21,"endColumn":52},{"ruleId":"182","severity":1,"message":"189","line":7,"column":5,"nodeType":"184","messageId":"185","endLine":7,"endColumn":11},{"ruleId":"182","severity":1,"message":"190","line":7,"column":13,"nodeType":"184","messageId":"185","endLine":7,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":7,"column":20,"nodeType":"184","messageId":"185","endLine":7,"endColumn":24},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'login' is assigned a value but never used.","'users' is assigned a value but never used.","'Card' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'token' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Togglable' is defined but never used.","'UsersList' is defined but never used.","'styles' is defined but never used.","'handleLogout' is assigned a value but never used.","'useState' is defined but never used.","'userService' is defined but never used.","'Button' is defined but never used.","'PostForm' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'section' is assigned a value but never used.","'logout' is defined but never used.","'PostPage' is defined but never used.","'useDispatch' is defined but never used.","'updateUser' is defined but never used.","'res' is assigned a value but never used.","'allComments' is assigned a value but never used.","'postService' is defined but never used.","'createNewComment' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]